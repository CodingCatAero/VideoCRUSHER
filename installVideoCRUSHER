#!/bin/bash
set -eo pipefail

sudo printf ""

if [[ $? ]] ;
then

    # Initializing this variable so bash is happy
    packageSearch=""

    # Determines what flavour of linux the user is running (Arch, Debiam, or Redhat)
    # Then adjusts the package search and install commands accordingly
    if [[ -f /etc/arch-release ]]; 
    then
        echo "Arch-based OS detected"
        packageSearch="pacman -Q"
        packageInstall="sudo pacman -Syu"

    elif [[ -f /etc/debian_version ]]; 
    then
        echo "Debian-based OS detected"
        packageSearch="apt search"
        packageInstall="sudo aot-get install"

    elif [[ -f /etc/redhat-release ]]; 
    then
        echo "Redhat-based OS detected"
        packageSearch="rpm -qa | grep -w"
        packageInstall="dnf install"

    else # If linux isn't found, program exits
        echo "Unsupported OS detected. Terminating"
        exit 1
    fi

    # If either dependency isn't installed, install it using the system's package manager
    if ! $packageSearch python; 
    then
        printf "\n\nPython not found. Installing..."
        $packageInstall python
    fi

    if ! $packageSearch ffmpeg; 
    then
        printf "\n\nFfmpeg not found. Installing..."
        $packageInstall ffmpeg
    fi

    # Adds or replaces the bash and python scripts for the user
    printf "\n\n\Installing videoCRUSHER script into %s/.local/bin\n" "$HOME"
    curl https://raw.githubusercontent.com/CodingCatAero/VideoCRUSHER/refs/heads/main/videoCRUSHER | sudo tee "$HOME/.local/bin/videoCRUSHER" &> /dev/null
    printf "\nDone!"

    printf "\n\n\Installing videoCRUSHER python program into %s/.local\n" "$HOME"
    curl https://raw.githubusercontent.com/CodingCatAero/VideoCRUSHER/refs/heads/main/videoCRUSHER.py | sudo tee "$HOME/.local/videoCRUSHER.py" &> /dev/null
    printf "\nDone!"

    printf "\n\nSetting permissions.."
    sudo chmod 555 "$HOME/.local/bin/videoCRUSHER"
    printf "\nDone!"

    printf "\n\nInstalled"
fi
